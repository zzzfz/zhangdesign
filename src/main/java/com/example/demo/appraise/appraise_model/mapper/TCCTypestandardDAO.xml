<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.appraise.appraise_model.mapper.TCCTypestandardDAO">
  <resultMap id="BaseResultMap" type="com.example.demo.appraise.appraise_model.model.TCCTypestandard">
    <id column="TypeCode" jdbcType="VARCHAR" property="typecode" />
    <result column="TypeName" jdbcType="VARCHAR" property="typename" />
    <result column="EmpCode" jdbcType="VARCHAR" property="empcode" />
    <result column="ManCount" jdbcType="VARCHAR" property="mancount" />
    <result column="ManCountPer" jdbcType="VARCHAR" property="mancountper" />
    <result column="Upper_limit" jdbcType="VARCHAR" property="upperLimit" />
    <result column="DOWN_LIMIT" jdbcType="VARCHAR" property="downLimit" />
    <result column="PRI" jdbcType="VARCHAR" property="pri" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    TypeCode, TypeName, EmpCode, ManCount, ManCountPer, Upper_limit, DOWN_LIMIT, PRI
  </sql>
  <select id="selectByExample" parameterType="com.example.demo.appraise.appraise_model.model.TCCTypestandardExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_c_c_typestandard
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_c_c_typestandard
    where TypeCode = #{typecode,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from t_c_c_typestandard
    where TypeCode = #{typecode,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demo.appraise.appraise_model.model.TCCTypestandardExample">
    delete from t_c_c_typestandard
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="TypeCode" keyProperty="typecode" parameterType="com.example.demo.appraise.appraise_model.model.TCCTypestandard" useGeneratedKeys="true">
    insert into t_c_c_typestandard (TypeCode, TypeName, EmpCode, ManCount,
      ManCountPer, Upper_limit, DOWN_LIMIT, 
      PRI)
    values (#{typecode,jdbcType=VARCHAR}, #{typename,jdbcType=VARCHAR}, #{empcode,jdbcType=VARCHAR}, #{mancount,jdbcType=VARCHAR},
      #{mancountper,jdbcType=VARCHAR}, #{upperLimit,jdbcType=VARCHAR}, #{downLimit,jdbcType=VARCHAR}, 
      #{pri,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="TypeCode" keyProperty="typecode" parameterType="com.example.demo.appraise.appraise_model.model.TCCTypestandard" useGeneratedKeys="true">
    insert into t_c_c_typestandard
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="typename != null">
        TypeName,
      </if>
      <if test="empcode != null">
        EmpCode,
      </if>
      <if test="mancount != null">
        ManCount,
      </if>
      <if test="mancountper != null">
        ManCountPer,
      </if>
      <if test="upperLimit != null">
        Upper_limit,
      </if>
      <if test="downLimit != null">
        DOWN_LIMIT,
      </if>
      <if test="pri != null">
        PRI,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="typename != null">
        #{typename,jdbcType=VARCHAR},
      </if>
      <if test="empcode != null">
        #{empcode,jdbcType=VARCHAR},
      </if>
      <if test="mancount != null">
        #{mancount,jdbcType=VARCHAR},
      </if>
      <if test="mancountper != null">
        #{mancountper,jdbcType=VARCHAR},
      </if>
      <if test="upperLimit != null">
        #{upperLimit,jdbcType=VARCHAR},
      </if>
      <if test="downLimit != null">
        #{downLimit,jdbcType=VARCHAR},
      </if>
      <if test="pri != null">
        #{pri,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.appraise.appraise_model.model.TCCTypestandardExample" resultType="java.lang.Long">
    select count(*) from t_c_c_typestandard
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_c_c_typestandard
    <set>
      <if test="record.typecode != null">
        TypeCode = #{record.typecode,jdbcType=VARCHAR},
      </if>
      <if test="record.typename != null">
        TypeName = #{record.typename,jdbcType=VARCHAR},
      </if>
      <if test="record.empcode != null">
        EmpCode = #{record.empcode,jdbcType=VARCHAR},
      </if>
      <if test="record.mancount != null">
        ManCount = #{record.mancount,jdbcType=VARCHAR},
      </if>
      <if test="record.mancountper != null">
        ManCountPer = #{record.mancountper,jdbcType=VARCHAR},
      </if>
      <if test="record.upperLimit != null">
        Upper_limit = #{record.upperLimit,jdbcType=VARCHAR},
      </if>
      <if test="record.downLimit != null">
        DOWN_LIMIT = #{record.downLimit,jdbcType=VARCHAR},
      </if>
      <if test="record.pri != null">
        PRI = #{record.pri,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_c_c_typestandard
    set TypeCode = #{record.typecode,jdbcType=VARCHAR},
      TypeName = #{record.typename,jdbcType=VARCHAR},
      EmpCode = #{record.empcode,jdbcType=VARCHAR},
      ManCount = #{record.mancount,jdbcType=VARCHAR},
      ManCountPer = #{record.mancountper,jdbcType=VARCHAR},
      Upper_limit = #{record.upperLimit,jdbcType=VARCHAR},
      DOWN_LIMIT = #{record.downLimit,jdbcType=VARCHAR},
      PRI = #{record.pri,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.appraise.appraise_model.model.TCCTypestandard">
    update t_c_c_typestandard
    <set>
      <if test="typename != null">
        TypeName = #{typename,jdbcType=VARCHAR},
      </if>
      <if test="empcode != null">
        EmpCode = #{empcode,jdbcType=VARCHAR},
      </if>
      <if test="mancount != null">
        ManCount = #{mancount,jdbcType=VARCHAR},
      </if>
      <if test="mancountper != null">
        ManCountPer = #{mancountper,jdbcType=VARCHAR},
      </if>
      <if test="upperLimit != null">
        Upper_limit = #{upperLimit,jdbcType=VARCHAR},
      </if>
      <if test="downLimit != null">
        DOWN_LIMIT = #{downLimit,jdbcType=VARCHAR},
      </if>
      <if test="pri != null">
        PRI = #{pri,jdbcType=VARCHAR},
      </if>
    </set>
    where TypeCode = #{typecode,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.appraise.appraise_model.model.TCCTypestandard">
    update t_c_c_typestandard
    set TypeName = #{typename,jdbcType=VARCHAR},
      EmpCode = #{empcode,jdbcType=VARCHAR},
      ManCount = #{mancount,jdbcType=VARCHAR},
      ManCountPer = #{mancountper,jdbcType=VARCHAR},
      Upper_limit = #{upperLimit,jdbcType=VARCHAR},
      DOWN_LIMIT = #{downLimit,jdbcType=VARCHAR},
      PRI = #{pri,jdbcType=VARCHAR}
    where TypeCode = #{typecode,jdbcType=VARCHAR}
  </update>
</mapper>